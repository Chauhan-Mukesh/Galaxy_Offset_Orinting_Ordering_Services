# Generated by Django 2.0.5 on 2020-09-30 11:54

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AqutousCoating',
            fields=[
                ('aqutous_coating_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Aqutous Coating ID')),
                ('aqutous_coating_type', models.CharField(max_length=30, verbose_name='Aqutous Coating Type')),
            ],
        ),
        migrations.CreateModel(
            name='AqutousCoatingProductMap',
            fields=[
                ('aCoat_p_map_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Aqutous Coating & Product Map ID')),
                ('aqutous_coating_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.AqutousCoating', verbose_name='Aqutous Coating ID')),
            ],
        ),
        migrations.CreateModel(
            name='BindingMethod',
            fields=[
                ('binding_method_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Binding Method ID')),
                ('binding_methods', models.CharField(max_length=30, verbose_name='Binding Methods')),
            ],
        ),
        migrations.CreateModel(
            name='BindingMethodProductMap',
            fields=[
                ('binding_methods_p_map_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Binding Method & Product Map ID')),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('color_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Color ID')),
                ('prod_color', models.ImageField(max_length=50, upload_to='', verbose_name='Product Color')),
            ],
        ),
        migrations.CreateModel(
            name='ColorProductMap',
            fields=[
                ('color_p_map_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Color & Product Map ID')),
                ('color_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.Color', verbose_name='Color ID')),
            ],
        ),
        migrations.CreateModel(
            name='FeedBack',
            fields=[
                ('feedback_id', models.AutoField(primary_key=True, serialize=False, verbose_name='FeedBack ID')),
                ('feedback_desc', models.CharField(max_length=300, verbose_name='Customer FeedBack')),
                ('feedback_date', models.DateField(auto_now_add=True, verbose_name='FeedBack Date ')),
            ],
        ),
        migrations.CreateModel(
            name='FoldingOptions',
            fields=[
                ('folding_options_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Folding Options ID')),
                ('folding_options_type', models.CharField(max_length=30, verbose_name='Folding Options Types')),
            ],
        ),
        migrations.CreateModel(
            name='FoldingOptionsProductMap',
            fields=[
                ('folding_option_p_map_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Folding Options & Product Map ID')),
                ('folding_options_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.FoldingOptions', verbose_name='Folding Options ID')),
            ],
        ),
        migrations.CreateModel(
            name='Gallary',
            fields=[
                ('img_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Image ID')),
                ('img_name', models.CharField(max_length=30, verbose_name='Image Name')),
                ('upload_date', models.DateField(auto_now_add=True, verbose_name='Image Upload Date')),
            ],
        ),
        migrations.CreateModel(
            name='HoleDrilling',
            fields=[
                ('hole_drilling_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Hole Drilling ID')),
                ('hole', models.BooleanField(default=False, verbose_name='Hole Drilling')),
            ],
        ),
        migrations.CreateModel(
            name='HoleDrillingProductMap',
            fields=[
                ('hole_drill_p_map_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Hole Drilling & Product Map ID')),
                ('hole_drilling_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.HoleDrilling', verbose_name='Hole Drilling ID')),
            ],
        ),
        migrations.CreateModel(
            name='ImageTemplate',
            fields=[
                ('temp_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Template ID')),
                ('temp_img', models.ImageField(upload_to='', verbose_name='Template Image')),
            ],
        ),
        migrations.CreateModel(
            name='ImageTemplateProductMap',
            fields=[
                ('imageTemp_p_map_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Template Image & Product Map ID')),
            ],
        ),
        migrations.CreateModel(
            name='NoOfMonths',
            fields=[
                ('no_of_months_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='No Of Months ID')),
                ('months', models.IntegerField(verbose_name='Months')),
            ],
        ),
        migrations.CreateModel(
            name='NoOfMonthsProductMap',
            fields=[
                ('no_of_months_p_map_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='No Of Months & Product Map ID')),
                ('no_of_months_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.NoOfMonths', verbose_name='No Of Months ID')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notify_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('notify_detail', models.CharField(max_length=200, verbose_name='Notification Detail')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Order ID')),
                ('attribute_value', models.CharField(max_length=2000, verbose_name='Item Details JSON')),
                ('order_date', models.DateField(auto_now_add=True, verbose_name='Order Date')),
                ('order_job_title', models.CharField(max_length=100, verbose_name='Name of Company/Business')),
                ('order_desc', models.CharField(max_length=1000, verbose_name='Details for Product')),
                ('product_img', models.ImageField(upload_to='', verbose_name='Template Image')),
                ('address', models.CharField(max_length=100, verbose_name='Customer Address ')),
                ('state', models.CharField(max_length=30, verbose_name='Customer State')),
                ('city', models.CharField(max_length=30, verbose_name='Customer City')),
                ('postal_code', models.IntegerField(verbose_name='Area Pin Code')),
            ],
        ),
        migrations.CreateModel(
            name='Packages',
            fields=[
                ('package_ID', models.AutoField(primary_key=True, serialize=False, verbose_name='Package ID')),
                ('package_Name', models.CharField(max_length=30, verbose_name='Package Name')),
                ('attribute_values', models.CharField(max_length=200, verbose_name='Item Details JSON')),
                ('package_Price', models.IntegerField(default=0.0, verbose_name='Package Price')),
            ],
        ),
        migrations.CreateModel(
            name='PaperChoice',
            fields=[
                ('paper_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Paper Choice ID')),
                ('paper_choices_name', models.CharField(max_length=50, verbose_name='Paper Choices')),
            ],
        ),
        migrations.CreateModel(
            name='PaperChoiceProductMap',
            fields=[
                ('paper_p_map_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Paper Choices & Product Map ID')),
                ('paper_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.PaperChoice', verbose_name='Paper ID')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('prod_ID', models.AutoField(primary_key=True, serialize=False, verbose_name='Product ID')),
                ('prod_Name', models.CharField(max_length=30, verbose_name='Product Name')),
                ('prod_Desc', models.CharField(max_length=500, verbose_name='Product Description')),
                ('prod_Price', models.IntegerField(default=0.0, verbose_name='Product Price/Piece')),
            ],
        ),
        migrations.CreateModel(
            name='ShrinkWrapping',
            fields=[
                ('shrink_wrapping_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Shrink Wrapping ID')),
                ('shrink_options', models.CharField(max_length=20, verbose_name='Shrink Wrap Options')),
            ],
        ),
        migrations.CreateModel(
            name='ShrinkWrappingProductMap',
            fields=[
                ('shrink_wrap_p_map_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Shrink Wrapping & Product Map ID')),
                ('prod_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.Product', verbose_name='Product Id')),
                ('shrink_wrapping_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.ShrinkWrapping', verbose_name='Shrink Wrapping ID')),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('size_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Size ID')),
                ('prod_size', models.ImageField(max_length=20, upload_to='', verbose_name='Product Size')),
            ],
        ),
        migrations.CreateModel(
            name='SizeProductMap',
            fields=[
                ('size_p_map_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Size & Product Map ID')),
                ('prod_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.Product', verbose_name='Product Id')),
                ('size_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.Size', verbose_name='Size ID')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='User ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='User Avatar')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='M', max_length=1, verbose_name='Gender')),
                ('address', models.CharField(blank=True, max_length=100, verbose_name='address')),
                ('role', models.CharField(choices=[('A', 'Admin'), ('D', 'Designer'), ('C', 'Customer')], default='C', max_length=1, verbose_name='User Type')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='paperchoiceproductmap',
            name='prod_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.Product', verbose_name='Product Id'),
        ),
        migrations.AddField(
            model_name='packages',
            name='prod_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.Product', verbose_name='Product ID (FK)'),
        ),
        migrations.AddField(
            model_name='order',
            name='prod_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.Product', verbose_name='Product ID'),
        ),
        migrations.AddField(
            model_name='order',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Customer ID'),
        ),
        migrations.AddField(
            model_name='notification',
            name='order_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.Order', verbose_name='Order ID'),
        ),
        migrations.AddField(
            model_name='notification',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User ID'),
        ),
        migrations.AddField(
            model_name='noofmonthsproductmap',
            name='prod_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.Product', verbose_name='Product Id'),
        ),
        migrations.AddField(
            model_name='imagetemplateproductmap',
            name='prod_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.Product', verbose_name='Product Id'),
        ),
        migrations.AddField(
            model_name='imagetemplateproductmap',
            name='template_img_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.ImageTemplate', verbose_name='Image Template ID'),
        ),
        migrations.AddField(
            model_name='holedrillingproductmap',
            name='prod_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.Product', verbose_name='Product Id'),
        ),
        migrations.AddField(
            model_name='foldingoptionsproductmap',
            name='prod_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.Product', verbose_name='Product Id'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Customer ID'),
        ),
        migrations.AddField(
            model_name='colorproductmap',
            name='prod_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.Product', verbose_name='Product Id'),
        ),
        migrations.AddField(
            model_name='bindingmethodproductmap',
            name='binding_method_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.Color', verbose_name='Binding Methods ID'),
        ),
        migrations.AddField(
            model_name='bindingmethodproductmap',
            name='prod_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.Product', verbose_name='Product Id'),
        ),
        migrations.AddField(
            model_name='aqutouscoatingproductmap',
            name='prod_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GalaxyOffset.Product', verbose_name='Product Id'),
        ),
    ]
